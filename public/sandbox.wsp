<?wsp
    CellEventFire["NewCell"][cell_] := (
        With[
            {
                obj = <|
                        "id"->cell[[1]], 
                        "sign"->cell["sign"],
                        "type"->cell["type"],
                        "data"->cell["data"],
                        "child"->If[NullQ[ cell["child"] ], "", cell["child"][[1]]],
                        "parent"->If[NullQ[ cell["parent"] ], "", cell["parent"][[1]]],
                        "next"->If[NullQ[ cell["next"] ], "", cell["next"][[1]]],
                        "prev"->If[NullQ[ cell["prev"] ], "", cell["prev"][[1]]]
                    |>
            },

            WebSocketPublish[server, FrontEndCreateCell[ExportString[obj, "JSON"]], "console"];
        ];
    );

    ""
      
?>

  <?wsp LoadPage["assets/header.wsp"] ?>
  
  <div class="container" style="margin-top:1em">
  
      <?wsp LoadPage["assets/navigation.wsp"] ?>
  
      <div class="d-flex align-items-center">

  
        </div>
        <div class="d-flex align-items-center">
            <div class="col-lg-10 col-md-8 mx-left">
              <h1 class="fw-light">Console</h1>
              <p class="lead text-muted">Direct commands to WF Engine</p>
              <div action=""  id="service">
              <div class="form-group">
                  
             
                <label class="form-group-label" for="function">
                  Wolfram Language
                </label>
                <textarea class="form-control" id="function" rows="4" name="function"><?wspsession["data"]["function"]?></textarea>
              </div>
            </div>


            </div>
          </div>

        


        <div class="d-flex align-items-center" id="res">

        </div>

  
  </div>

  <script>
        core.EvaluatedResult = function(args, env) {
      var r = interpretate(args[0]);

      

      var html = `
      <div class="row py-lg-3">
  
      <div class="col-lg-10 col-md-8 mx-left">
      <div class="form-control" style="height: 100%;" id="evaluated">
         ${r} 
      </div>
    </div>
    </div>  
      
      `;
      document.getElementById("res").insertAdjacentHTML('afterbegin', html);


    };
    function calculate(func) {
      var data = `
      With[
            {
        
                virt = {Graphics[xs___] :> ExportString[Graphics[xs], "SVG"]},
                cli = client
    
            },

            WebSocketSend[cli, EvaluatedResult[ToString[(${func}) /. virt]]]

        ];
      `;

      socket.send(data);

    };

    core.FrontEndCreateCell = function(args, env) {
      var r = interpretate(args[0]);

      var html = `
      <div class="row py-lg-3">
  
      <div class="col-lg-10 col-md-8 mx-left">
      <div class="form-control" style="height: 100%;" id="evaluated">
         ${r} 
      </div>
    </div>
    </div>  
      
      `;

      document.getElementById("res").insertAdjacentHTML('afterbegin', html);

    };

    function subscribeOnLoad() {
        console.log("sub");
        var q = 'Tinyweb`WebSocketSubscribe[server, "console", client]';

        if (socket.readyState != 1) {
            setTimeout(subscribeOnLoad, 500);
        } else {
            socket.send(q);
        }
    };

    var editor = CodeMirror.fromTextArea(document.getElementById("function"), {
       lineNumbers: false,
       autoCloseTags: true,
       setSize: (200,200),
       mode:  "mathematica",
       indentWithTabs: true,
       theme: "default",   
       lineWrapping: true,         
       extraKeys: {
         "F11": function(cm) {
           cm.setOption("fullScreen", !cm.getOption("fullScreen"));
         },
         "Esc": function(cm) {
          if (cm.getOption("fullScreen")) cm.setOption("fullScreen", false);
        },
        "Shift-Enter": function(instance) { 
          calculate(instance.getValue());
        },
      }      
    });

    subscribeOnLoad();

    </script>
  
  <?wsp LoadPage["assets/footer.wsp"] ?>