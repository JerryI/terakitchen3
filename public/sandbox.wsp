<?wsp
    ""     
?>

  <?wsp LoadPage["assets/header.wsp"] ?>
  
  <div class="container" style="margin-top:1em">
  
      <?wsp LoadPage["assets/navigation.wsp"] ?>
  
      <div class="d-flex align-items-center">

  
        </div>
        <div class="d-flex align-items-center">
            <div class="col-lg-10 col-md-8 mx-left">
              <h1 class="fw-light">Console</h1>
              <p class="lead text-muted">Direct commands to WF Engine</p>
              <div action=""  id="service">
              <div class="form-group">
                  
             
                <label class="form-group-label" for="function">
                  Wolfram Language
                </label>
                <button class="btn btn-sm btn-outline-info" onclick="addCell()">+</button>
                <div id="console">
                
                </div>
                
              </div>
            </div>


            </div>
          </div>

        


        <div class="d-flex align-items-center" id="res">

        </div>

  
  </div>

  <script>
    function addCell() {
      var q = 'Block[{fireEvent = CellEventFire[client]}, CellObjCreateNext[CellObj["'+last+'"]]]';
      socket.send(q);
    }

    function eval(ne, id, cell) {
      var q = 'CellObj["'+cell+'"]["data"]="'+ne+'"; NotebookEvaluate["'+id+'", "'+cell+'"]';
      socket.send(q);
    }

    var last;

    core.FrontEndRemoveCell = function(args, env) {
      var input = JSON.parse(interpretate(args[0]));
      if(input["parent"] === "") {
        document.getElementById(input["id"]).remove();
      } else {
        document.getElementById(input["id"]+"---"+input["type"]).remove();
      }
    }

    core.FrontEndCreateCell = function(args, env) {
      var input = JSON.parse(interpretate(args[0]));
      console.log(input);

      
    
      var target;

      if (input["parent"] === "") {
        // create a new div element
        const newDiv = document.createElement("div");
        newDiv.id = input["id"];
        newDiv.classList.add("parent-node");
        document.getElementById("console").appendChild(newDiv);
        
        target = newDiv;
      } else {
        target = document.getElementById(input["parent"]);
      }

      var notebook = input["sign"];
      var uuid = input["id"];

      var newCell = CodeMirror(target, {value: input["data"], mode:  "mathematica", extraKeys: {
        "Shift-Enter": function(instance) { 
           eval(instance.getValue(), notebook, uuid);
        },
       }});

      newCell.on("blur",function(cm,change){ socket.send('CellObj["'+cm.display.wrapper.id.split('---')[0]+'"]["data"] = "'+cm.getValue()+'";'); });

      var wrapper = newCell.display.wrapper;

      wrapper.id = input["id"]+"---"+input["type"];

      wrapper.classList.add(input["type"] + '-node');

      last = input["id"];

    }

    function OpenOnLoad() {
        console.log("sub");
        var q = 'NotebookOpen["console"]';

        if (socket.readyState != 1) {
            setTimeout(OpenOnLoad, 500);
        } else {
            socket.send(q);
        }
    };

    OpenOnLoad();

  </script>
  
  <?wsp LoadPage["assets/footer.wsp"] ?>