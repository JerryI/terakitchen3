
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingOne<?wspuid?>">
                <h4 class="panel-title">
                    <button onclick="openField<?wspuid?>()" class="btn btn-toggle align-items-center rounded collapsed" data-bs-toggle="collapse" data-bs-target="#collapse<?wspuid?>" aria-expanded="false">
                        Spectrum
                    </button>
                </h4>
            </div>
            <div id="collapse<?wspuid?>" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne<?wspuid?>">
                <div class="panel-body">

                    <div id='plot<?wspuid?>'></div>

                </div>
                
                
                
                <div class="form-row">
                <div class="col">
                    <label for="phasetresh" class="col-form-label-sm">phase treshhold</label>
                    <input type="number" value=5.3 class="form-control form-control-sm" id="phasetresh">
                </div>
                <div class="col">
                    <label for="lowcut" class="col-form-label-sm">low cutoff</label>
                    <input type="number" value=10 class="form-control form-control-sm" id="lowcut">
                </div> 

                </div>   
                
                <br>

                <button class="btn btn-sm btn-outline-info" onclick="rewrap<?wspuid?>()">Reunwrap phase</button>
                <button class="btn btn-sm btn-outline-secondary" onclick="fieldExport('<?wspfieldname?>')">Export</button>
            </div>
        </div>

        <script>
            var fieldState<?wspuid?> = false;

            function rewrap<?wspuid?>() {
                var ph = document.getElementById("phasetresh").value;
                var cut = document.getElementById("lowcut").value;

                loadField('ExportString[DropHalf/@{data["freqs"], ClusterPhase[Arg[data["fft"]] - (((MaximalBy[data["tds"]//Abs, Last] // First // First) - data["tds"][[1, 1]]) 2 Pi (1/33.356) data["freqs"] ), '+cut+', Length[data["fft"]], '+ph+']}, "JSON"]', function(resp) {
                    var raw = JSON.parse(resp);
                    let phase = {
                            x: raw[0],
                            y: raw[1],
                            mode: 'lines',
                            name: 'phase',
                            yaxis: 'y2'
                        }; 

                    Plotly.deleteTraces('plot<?wspuid?>', [-1]);
   
                    Plotly.addTraces('plot<?wspuid?>', [phase]);    
                });
            }

            function openField<?wspuid?>() {
                if(fieldState<?wspuid?> == false) {
                    fieldState<?wspuid?> = true;
                    loadField('ExportString[DropHalf/@{data["freqs"], (data["fft"]//Abs)^2, ClusterPhase[Arg[data["fft"]] - (((MaximalBy[data["tds"]//Abs, Last] // First // First) - data["tds"][[1, 1]]) 2 Pi (1/33.356) data["freqs"] ), 10, Length[data["fft"]], 5.3]}, "JSON"]', function(resp) {
        
                        var raw = JSON.parse(resp);
        
                        let data = {
                            x: raw[0],
                            y: raw[1],
                            mode: 'lines',
                            name: 'power'
                        };

                        let phase = {
                            x: raw[0],
                            y: raw[2],
                            mode: 'lines',
                            name: 'phase',
                            yaxis: 'y2'
                        }; 

                        let layout = {
                            xaxis: {
                                title: 'wavenumber, cm-1',
                                showgrid: true,
                                zeroline: true
                            },
                            yaxis: {
                                title: 'intensity, a.u.',
                                showgrid: true,
                                zeroline: true
                            },
                            yaxis2: {
                title: 'phase, rad.',
                titlefont: {color: 'rgb(148, 103, 189)'},

                tickfont: {color: 'rgb(148, 103, 189)'},

                overlaying: 'y',
                side: 'right'

            } 
                        };
        
                        Plotly.newPlot('plot<?wspuid?>', [data, phase], layout);
        
                    });
                }
            }
        
        </script>
